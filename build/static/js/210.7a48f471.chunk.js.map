{"version":3,"file":"static/js/210.7a48f471.chunk.js","mappings":"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","sources":["components/Typography/PageTitle.js","components/Typography/SectionTitle.js","pages/Community.js"],"sourcesContent":["import React from 'react'\n\nfunction PageTitle({ children }) {\n  return (\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\n  )\n}\n\nexport default PageTitle\n","import React from 'react'\n\nfunction SectionTitle({ children }) {\n  return <h2 className=\"mb-4 text-lg font-semibold text-gray-600 dark:text-gray-300\">{children}</h2>\n}\n\nexport default SectionTitle\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { ethers } from \"ethers\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Modal,\n  Input,\n  Row,\n  Checkbox,\n  Button,\n  Text,\n  Loading,\n  Textarea,\n} from \"@nextui-org/react\";\n\nimport { AuthContext } from \"../utils/AuthProvider\";\nimport PageTitle from \"../components/Typography/PageTitle\";\nimport SectionTitle from \"../components/Typography/SectionTitle\";\nimport CTA from \"../components/CTA\";\nimport {} from \"@windmill/react-ui\";\nimport PONK from \"../assets/img/irupus.png\";\nimport { ellipseAddress } from \"../lib/utilities\";\nfunction Buttons() {\n  const { address, signer, connect } = useContext(AuthContext);\n  const [visible, setVisible] = React.useState(false);\n  const [visible2, setVisible2] = React.useState(false);\n  const [userstatus, setuserstatus] = useState(\"\");\n  const [imageurl, setimageurl] = useState(\"\");\n  const [profile, setprofile] = useState(\"\");\n  const [isloading, setisloading] = useState(false);\n  const [amount, setamount] = useState(\"\");\n  const [users, setusers] = useState([]);\n  const [userid, setuserid] = useState(\"\");\n  const handler = () => setVisible(true);\n  const closeHandler = () => {\n    setVisible(false);\n    console.log(\"closed\");\n  };\n  const closeHandler2 = () => {\n    setVisible2(false);\n    console.log(\"closed\");\n  };\n  async function isUserRegistered() {\n    const data = await signer?.isRegistered();\n    setuserstatus(data);\n  }\n\n  async function allUsers() {\n    const data = await signer?.fetchAllUsers();\n    setusers(data);\n    console.log(data);\n    // setuserstatus(data);\n  }\n  useEffect(() => {\n    isUserRegistered();\n    allUsers();\n  }, [signer]);\n\n  const onAddProfile = async () => {\n    let transaction = await signer.createProfile(imageurl, profile);\n    setisloading(true);\n    let txReceipt = await transaction.wait();\n    setisloading(false);\n    setVisible(false);\n  };\n\n  const onTipUser = async () => {\n    const amount_ = ethers.utils.parseUnits(amount, \"ether\");\n    let transaction = await signer.tipUser(userid, {\n      value: amount_,\n    });\n    setisloading(true);\n    let txReceipt = await transaction.wait();\n    setisloading(false);\n    setVisible(false);\n  };\n  return (\n    <>\n      {/* {isUserRegistered() == false ? setVisible(true) : setVisible(false)} */}\n      {/* <Button onClick={handler}>Open modal</Button> */}\n      {userstatus == false ? (\n        <Button color=\"gradient\" onClick={handler} className=\"mt-6\">\n          Add Profile\n        </Button>\n      ) : (\n        \"\"\n      )}\n\n      <Modal\n        closeButton\n        blur\n        aria-labelledby=\"modal-title\"\n        open={visible}\n        onClose={closeHandler}\n      >\n        <Modal.Header>\n          <Text id=\"modal-title\" size={18}>\n            Add a profile <Text b size={18}></Text>\n          </Text>\n        </Modal.Header>\n        <Modal.Body>\n          <Input\n            clearable\n            bordered\n            fullWidth\n            color=\"primary\"\n            size=\"lg\"\n            required\n            value={imageurl}\n            onChange={(e) => {\n              setimageurl(e.target.value);\n            }}\n            placeholder=\"place image url here\"\n          />\n          <Textarea\n            clearable\n            bordered\n            fullWidth\n            color=\"primary\"\n            size=\"lg\"\n            value={profile}\n            required\n            onChange={(e) => {\n              setprofile(e.target.value);\n            }}\n            placeholder=\"tell us something interesting about yourself\"\n          />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button auto flat color=\"error\" onClick={closeHandler}>\n            Close\n          </Button>\n          <Button\n            auto\n            onClick={() => {\n              onAddProfile();\n            }}\n          >\n            {isloading ? (\n              <Loading size=\"xs\" color=\"white\" className=\"pr-4\" />\n            ) : (\n              \"\"\n            )}\n            Add\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal\n        closeButton\n        blur\n        aria-labelledby=\"modal-title\"\n        open={visible2}\n        onClose={closeHandler2}\n      >\n        <Modal.Header>\n          <Text id=\"modal-title\" size={18}>\n            Enter an amount <Text b size={18}></Text>\n          </Text>\n        </Modal.Header>\n        <Modal.Body>\n          <Input\n            clearable\n            bordered\n            fullWidth\n            color=\"primary\"\n            size=\"lg\"\n            required\n            value={amount}\n            onChange={(e) => {\n              setamount(e.target.value);\n            }}\n            placeholder=\"Enter amount(eth)\"\n          />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button auto flat color=\"error\" onClick={closeHandler2}>\n            Close\n          </Button>\n          <Button\n            auto\n            onClick={() => {\n              onTipUser();\n            }}\n          >\n            {isloading ? (\n              <Loading size=\"xs\" color=\"white\" className=\"pr-4\" />\n            ) : (\n              \"\"\n            )}\n            Add\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <PageTitle>Destore Community</PageTitle>\n\n      <form className=\"mb-4\">\n        <label\n          for=\"default-search\"\n          class=\"mb-2 text-sm font-medium text-gray-900 sr-only dark:text-gray-300\"\n        >\n          Search\n        </label>\n        <div class=\"relative\">\n          <div class=\"flex absolute inset-y-0 left-0 items-center pl-3 pointer-events-none\">\n            <svg\n              aria-hidden=\"true\"\n              class=\"w-5 h-5 text-gray-500 dark:text-gray-400\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n              ></path>\n            </svg>\n          </div>\n          <input\n            type=\"search\"\n            id=\"default-search\"\n            class=\"block p-3 pl-10 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500 focus:outline-none\"\n            placeholder=\"Search Users\"\n            required=\"\"\n          />\n        </div>\n      </form>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 \">\n        {users?.map((users) => (\n          <div\n            class=\"overflow-hidden border border-gray-200 rounded-lg grid grid-cols-1 group sm:grid-cols-3\"\n            href=\"\"\n          >\n            <div class=\"relative\">\n              <img\n                class=\"absolute inset-0 object-cover w-full h-full\"\n                src={users?.image}\n                alt=\"\"\n              />\n            </div>\n\n            <div class=\"p-8 sm:col-span-2\">\n              <ul class=\"flex space-x-1\">\n                <li\n                  onClick={() => {\n                    setVisible2(true);\n                    setuserid(users?.id?.toString());\n                    // onTipUser(users?.id?.toString());\n                  }}\n                  class=\"inline-block px-3 py-1 text-xs font-semibold text-white bg-blue-600 rounded-full\"\n                >\n                  Tip\n                </li>\n              </ul>\n\n              <h5 class=\"mt-4 font-bold dark:text-gray-300\">\n                {\" \"}\n                {ellipseAddress(users?._address)}\n              </h5>\n\n              <p class=\"mt-2 text-sm text-gray-500 dark:text-gray-200\">\n                {users?.profile}\n              </p>\n              <p class=\"mt-2 text-sm text-gray-500 dark:text-gray-200\">\n                {ethers.utils.formatEther(users?.balance?.toString())}\n                ETH\n              </p>\n            </div>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n\nexport default Buttons;\n"],"names":["children","className","useContext","AuthContext","signer","address","connect","React","visible","setVisible","visible2","setVisible2","useState","userstatus","setuserstatus","imageurl","setimageurl","profile","setprofile","isloading","setisloading","amount","setamount","users","setusers","userid","setuserid","closeHandler","console","log","closeHandler2","isRegistered","data","fetchAllUsers","useEffect","isUserRegistered","allUsers","onAddProfile","createProfile","transaction","wait","onTipUser","amount_","ethers","tipUser","value","color","onClick","closeButton","blur","open","onClose","id","size","b","clearable","bordered","fullWidth","required","onChange","e","target","placeholder","auto","flat","PageTitle","for","class","fill","stroke","viewBox","xmlns","d","type","map","href","src","image","alt","toString","ellipseAddress","_address","balance"],"sourceRoot":""}
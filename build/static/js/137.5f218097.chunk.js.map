{"version":3,"file":"static/js/137.5f218097.chunk.js","mappings":"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","sources":["components/Typography/PageTitle.js","pages/Chats.js","../node_modules/@heroicons/react/24/outline/esm/CheckCircleIcon.js"],"sourcesContent":["import React from 'react'\n\nfunction PageTitle({ children }) {\n  return (\n    <h1 className=\"my-6 text-2xl font-semibold text-gray-700 dark:text-gray-200\">{children}</h1>\n  )\n}\n\nexport default PageTitle\n","import React, { useState, useEffect, useContext, useRef } from \"react\";\nimport PageTitle from \"../components/Typography/PageTitle\";\nimport { useMoralis, useMoralisQuery } from \"react-moralis\";\n\nimport Profile from \"../assets/img/irupus.png\";\nimport { CheckCircleIcon } from \"@heroicons/react/24/outline\";\nimport Emojicons from \"./Emojicons\";\nimport { Input } from \"@windmill/react-ui\";\nimport { ellipseAddress } from \"../lib/utilities\";\nimport { AuthContext } from \"../utils/AuthProvider\";\n\nconst MINS_DURATION = 90;\n\nfunction Modals() {\n  const { isAuthenticated, logout, authenticate, user, Moralis, setUserData } =\n    useMoralis();\n  const endOfMessagesRef = useRef(null);\n  const [message, setMessage] = useState(\"\");\n  const [userprofile, setuserprofile] = useState(\"\");\n  const [username, setusername] = useState(\"\");\n  const { address, signer, connect } = useContext(AuthContext);\n  async function loaduser() {\n    const data = await signer.getSingleUser();\n    console.log(data);\n    localStorage.setItem(\"userprofile\", JSON.stringify(data));\n    setuserprofile(data);\n  }\n\n  useEffect(() => {\n    loaduser();\n  }, [signer]);\n\n  const { data } = useMoralisQuery(\n    \"Messages\",\n    (query) =>\n      query\n        .ascending(\"createdAt\")\n        .greaterThan(\n          \"createdAt\",\n          new Date(Date.now() - 1000 * 60 * MINS_DURATION)\n        ),\n    [],\n    {\n      live: true,\n    }\n  );\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n    if (!message) return;\n    const Messages = Moralis.Object.extend(\"Messages\");\n    const messages = new Messages();\n    messages\n      .save({\n        message: message,\n        username: user.getUsername(),\n        ethAddress: user.get(\"ethAddress\"),\n      })\n      .then(\n        (message) => {},\n        (error) => {\n          console.log(error.message);\n        }\n      );\n    endOfMessagesRef.current.scrollIntoView({ behavior: \"smooth\" });\n    setMessage(\"\");\n  };\n\n  const onChangeUserName = () => {\n    if (username === \"\") {\n      return;\n    }\n    setUserData({\n      username: username,\n    }).then((res) => {\n      setusername(\"\");\n    });\n  };\n\n  if (!isAuthenticated) {\n    // alert(\"not authenticated\");\n    return (\n      <h1\n        \n        className=\"bg-blue-600 items-center space-x-4 flex rounded-full px-8 py-2 text-white item-center m-auto mt-6 \"\n      >\n          will be available soon\n      </h1>\n    );\n  }\n\n  return (\n    <>\n      <PageTitle>Chat</PageTitle>\n\n      <div class=\"flex h-screen antialiased text-gray-800\">\n        <div class=\"flex md:flex-row flex-col h-full w-full overflow-x-hidden\">\n          <div class=\"flex flex-col px-4 mb-5 mt-6 dark:bg-gray-700 rounded-lg  w-full md:w-64 bg-white flex-shrink-0\">\n            <div class=\"w-full mt-4 bg-white rounded-lg border border-gray-200  dark:bg-gray-800 dark:border-gray-700\">\n              <div class=\"flex justify-end px-4 pt-4\"></div>\n              <div class=\"flex flex-col items-center pb-10\">\n                {userprofile.image?.length === 0 ? (\n                  <Emojicons username={user.getUsername()} />\n                ) : (\n                  <img\n                    class=\"mb-3 w-24 h-24 rounded-full shadow-lg\"\n                    src={userprofile?.image}\n                    alt=\"Bonnie image\"\n                  />\n                )}\n\n                <h5 class=\"mb-1 text-xl font-medium text-gray-900 dark:text-white\">\n                  {user.getUsername()}\n                </h5>\n                <span class=\"text-sm text-gray-500 dark:text-gray-400\"></span>\n                <div className=\"items-center justify-center \">\n                  <div class=\"w-4 h-4 animate-ping mt-1 bg-green-400  rounded-full m-auto\"></div>\n\n                  <p className=\"dark:text-white\">Online</p>\n                </div>\n\n                {/* <Input clearable label=\"Name\" placeholder=\"Name\" initialValue=\"NextUI\" /> */}\n                <div className=\"flex flex-row items-center\">\n                  <Input\n                    className=\"focus:ring-0 focus:border-transparent\"\n                    placeholder=\"change username\"\n                    onChange={(e) => {\n                      setusername(e.target.value);\n                    }}\n                    value={username}\n                  />\n                  <div\n                    onClick={() => {\n                      onChangeUserName();\n                    }}\n                  >\n                    <CheckCircleIcon className=\"h-6 dark:text-gray-200\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"flex flex-col flex-auto h-full p-6\">\n            <div class=\"flex flex-col flex-auto w-full flex-shrink-0 rounded-2xl dark:bg-gray-700 bg-gray-100 h-full p-4\">\n              <div class=\"flex flex-col h-full overflow-x-auto mb-4\">\n                <div class=\"flex flex-col h-full\">\n                  <div class=\"grid grid-cols-12 gap-y-2\">\n                    {data.map((message) => {\n                      const isUserMessage =\n                        message.get(\"ethAddress\") === user.get(\"ethAddress\");\n                      if (isUserMessage) {\n                        return (\n                          <>\n                            <div class=\"col-start-6 flex flex-col col-end-13 p-3 rounded-lg\">\n                              <div class=\"flex items-center justify-start flex-row-reverse\">\n                                <div class=\"flex items-center justify-center h-10 w-10 rounded-full bg-indigo-500 flex-shrink-0\">\n                                  {userprofile.image?.length === 0 ? (\n                                    <Emojicons\n                                      username={message.get(\"username\")}\n                                    />\n                                  ) : (\n                                    <img\n                                      class=\"mb-0 w-10 h-10 rounded-full shadow-lg\"\n                                      src={userprofile?.image}\n                                      alt=\"Bonnie image\"\n                                    />\n                                  )}\n                                </div>\n                                <div class=\"relative mr-3 text-sm bg-indigo-100 dark:bg-gray-600 dark:text-white rounded-md py-2 px-4 shadow rounded-xl\">\n                                  <div>{message.get(\"message\")}</div>\n                                </div>\n                              </div>\n                              <span className=\"justify-end dark:text-gray-200 items-end text-xs flex flex-row\">\n                                {message.get(\"username\")}\n                              </span>\n                            </div>\n                          </>\n                        );\n                      } else {\n                        <div class=\"col-start-1 col-end-8 p-3 rounded-lg\">\n                          <div class=\"flex flex-row items-center\">\n                            <div class=\"flex items-center justify-center h-10 w-10 rounded-full bg-indigo-500 flex-shrink-0\">\n                              {userprofile.image?.length === 0 ? (\n                                <Emojicons username={message.get(\"username\")} />\n                              ) : (\n                                <img\n                                  class=\"mb-0 w-10 h-10 rounded-full shadow-lg\"\n                                  src={userprofile?.image}\n                                  alt=\"Bonnie image\"\n                                />\n                              )}\n                            </div>\n                            <div class=\"relative ml-3 text-sm bg-white rounded-md dark:bg-gray-800 dark:text-white py-2 px-4 shadow rounded-xl\">\n                              <div>{message.get(\"message\")}</div>\n                            </div>\n                          </div>\n                          <span className=\"justify-end dark:text-gray-200 items-end text-xs flex flex-row\">\n                            {message.get(\"username\")}\n                          </span>\n                        </div>;\n                      }\n                    })}\n                  </div>\n                </div>\n              </div>\n              <div\n                ref={endOfMessagesRef}\n                className=\"flex flex-row items-center justify-center text-lg dark:text-gray-300 \"\n              >\n                <CheckCircleIcon className=\"h-4 text-green-500 \" />\n                {\"\"} You're caught up {user.getUsername()}\n              </div>\n              <div class=\"flex flex-row items-center h-16 rounded-xl bg-white rounded-md dark:bg-gray-800 dark:text-white w-full px-4\">\n                <div>\n                  <button class=\"flex items-center justify-center text-gray-400 hover:text-gray-600\">\n                    <svg\n                      class=\"w-5 h-5\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      viewBox=\"0 0 24 24\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                    >\n                      <path\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"\n                        stroke-width=\"2\"\n                        d=\"M15.172 7l-6.586 6.586a2 2 0 102.828 2.828l6.414-6.586a4 4 0 00-5.656-5.656l-6.415 6.585a6 6 0 108.486 8.486L20.5 13\"\n                      ></path>\n                    </svg>\n                  </button>\n                </div>\n                <div class=\"flex-grow ml-4\">\n                  <div class=\"relative w-full\">\n                    <input\n                      value={message}\n                      onChange={(e) => setMessage(e.target.value)}\n                      placeholder={`Enter a Message ${user.getUsername()}`}\n                      type=\"text\"\n                      class=\"flex w-full border rounded-lg dark:bg-gray-900 dark:border-transparent rounded-xl focus:outline-none focus:border-indigo-300 pl-4 h-10\"\n                    />\n                  </div>\n                </div>\n                <div class=\"ml-4\">\n                  <button\n                    onClick={sendMessage}\n                    class=\"flex items-center justify-center bg-indigo-500 hover:bg-indigo-600 rounded-xl text-white px-4 py-1 flex-shrink-0\"\n                  >\n                    <span>Send</span>\n                    <span class=\"ml-2\">\n                      <svg\n                        class=\"w-4 h-4 transform rotate-45 -mt-px\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        viewBox=\"0 0 24 24\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                      >\n                        <path\n                          stroke-linecap=\"round\"\n                          stroke-linejoin=\"round\"\n                          stroke-width=\"2\"\n                          d=\"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\"\n                        ></path>\n                      </svg>\n                    </span>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Modals;\n","import * as React from \"react\";\n\nfunction CheckCircleIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(CheckCircleIcon);\nexport default ForwardRef;"],"names":["children","className","useMoralis","isAuthenticated","user","logout","authenticate","Moralis","setUserData","endOfMessagesRef","useRef","useState","message","setMessage","userprofile","setuserprofile","username","setusername","useContext","AuthContext","signer","address","getSingleUser","data","console","log","localStorage","setItem","JSON","stringify","connect","useEffect","loaduser","useMoralisQuery","query","ascending","greaterThan","Date","now","live","class","image","length","getUsername","src","alt","Input","placeholder","onChange","e","target","value","onClick","then","res","map","get","ref","fill","stroke","viewBox","xmlns","d","type","preventDefault","Object","extend","save","ethAddress","error","current","scrollIntoView","behavior","ForwardRef","React","svgRef","title","titleId","props","assign","strokeWidth","id","strokeLinecap","strokeLinejoin"],"sourceRoot":""}